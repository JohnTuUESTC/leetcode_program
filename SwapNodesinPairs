#coding:gb2312
'''
leetcode Swap Nodes in Pairs
'''

# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, x):
        self.val = x
        self.next = None

class Solution(object):
    def swapPairs(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """

        #如果链表为空
        if not head:
            return head

        #如果链表中只有一个结点
        if not head.next:
            return head

        now = head
        next = head.next

        #交换相邻两个结点的位置
        now.next = next.next
        next.next = now
        head = next

        while True:
            pre = None

            #如果遍历完了整个链表
            if not now.next:
                return head
            else:
                pre = now
                now = now.next

            #如果最后只剩一个元素
            if not now.next:
                return head
            else:
                next = now.next

            #交换相邻两个结点的位置
            now.next = next.next
            next.next = now
            pre.next = next

if __name__ == "__main__":
    sol = Solution()
    l = ListNode(1)
    l.next = ListNode(2)
    temp_l = l.next
    temp_l.next = ListNode(3)
    temp_l = temp_l.next
    temp_l.next = ListNode(4)
    l1 = sol.swapPairs(l)

    while l1:
        print(l1.val)
        l1 = l1.next