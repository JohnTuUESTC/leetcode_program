#coding:gb2312
'''
leetcode Vaild Parentheses
'''

class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """

        #如果输入的字符串为空
        if not s:
            return True

        #如果输入的字符串的长度为奇数
        if len(s) % 2 == 1:
            return False

        index = 0 #表示遍历的位置
        bracket_stack = []

        while index < len(s):
            if len(bracket_stack) == 0:
                bracket_stack.append(s[index])
                index += 1
            else:
                if bracket_stack[len(bracket_stack) - 1] == '(' and s[index] == ')':
                    bracket_stack = bracket_stack[0 : len(bracket_stack) - 1]
                    index += 1
                elif bracket_stack[len(bracket_stack) - 1] == '[' and s[index] == ']':
                    bracket_stack = bracket_stack[0 : len(bracket_stack) - 1]
                    index += 1
                elif bracket_stack[len(bracket_stack) - 1] == '{' and s[index] == '}':
                    bracket_stack = bracket_stack[0 : len(bracket_stack) - 1]
                    index += 1
                else:
                    bracket_stack.append(s[index])
                    index += 1

        if len(bracket_stack) == 0:
            return True
        else:
            return False


if __name__ == "__main__":
    sol = Solution()
    print(sol.isValid("(()){{}}"))