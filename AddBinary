#coding:gb2312
'''
leetcode: Add Binary
'''

class Solution(object):
    def addBinary(self, a, b):
        """
        :type a: str
        :type b: str
        :rtype: str
        """

        if len(a) == 0 and len(b) == 0:
            return ""
        elif len(a) == 0:
            return b
        elif len(b) == 0:
            return a

        return self.Add(a, b)

    def Add(self, a, b):
        # 将更长的字符串用于存储结果
        if len(a) < len(b):
            return self.Add(b, a)

        a_index = len(a) - 1
        b_index = len(b) - 1

        # 由于处理字符串不方便，将字符串转化为列表来进行处理
        a_list = map(int, list(a))
        b_list = map(int, list(b))

        jinwei_flag = 0  # 记录是否有进位情况发生

        while a_index >= 0 and b_index >= 0:
            if a_list[a_index] + b_list[b_index] + jinwei_flag >= 2:
                a_list[a_index] = (a_list[a_index] + b_list[b_index] + jinwei_flag) % 2
                jinwei_flag = 1
            else:
                a_list[a_index] += b_list[b_index] + jinwei_flag
                jinwei_flag = 0

            a_index -= 1
            b_index -= 1

        if jinwei_flag == 1:
            while a_index >= 0:
                if a_list[a_index] + jinwei_flag == 2:
                    a_list[a_index] = 0
                else:
                    a_list[a_index] += jinwei_flag
                    jinwei_flag == 0
                    break

                a_index -= 1

            if a_index == -1 and jinwei_flag == 1:
                a_list = [1] + a_list

        return "".join(map(str, a_list))


if __name__ == '__main__':
    sol = Solution()
    print(sol.addBinary('1111', '1111'))

